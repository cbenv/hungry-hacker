For the feature choices, I included Menu Builder, Order History, and Analytics Page.
Going to /menu will take user to menu builder (although ideally, this page should be accessible only to Chef Emeril). The menu builder allows adding and removing food item to/from the menu, with options to specify the name as well as the price. Instead of allowing user to enter only a food item that is in the menu, I instead designed the page so that users may only add food item from the menu. Should user change their mind they can remove what they do not like from the cart as well.
On order history page, user can see all orders that have been submitted. The user can see the itemization of each order as well as the total price. Orders can be sorted by price from lowest to highest or from higest to lowest; as well as by the time the order was submitted, from newest to oldest or from oldest to newest. The ordering takes place on the client side with angular.
The analytics page utilizes d3.js to generate the bar chart. There is no user interaction yet so the chart is pretty static. The chart is responsive to width but a page refresh may be required. Given more time I would be able to implement more user interaction to the graph.
Because of the way the database is structured, there can only be one user that can use the application. This is due to order and food not having userID field to tie them to a particular user. Tackling this problem would involve changing the core requirement/contract of this application (phase three, specifically) so I was not sure if I should proceed. Anyway one room of improvement to this application would be user management, so that each user can have their own cart and orders. This also involve having multiple user roles, one is administrators (Chef Emeril) while the other is customers. So that manage menu, order history, and analytics are available only to admin while cart and order history are available to customers.